{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": ""
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US"
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 4
    },
    "vmName": {
      "type": "string",
      "defaultValue": "MyBIGIP",
      "metadata": {
        "description": ""
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_V2",
      "metadata": {
        "description": ""
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "BIGIPNic",
      "metadata": {
        "description": ""
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "BIGIPLoadBlancer",
      "metadata": {
        "description": ""
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "BIGIPAvailabilitySet",
      "metadata": {
        "description": ""
      }
    }
  },
  "variables": {
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "nicName0": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), 0))]",
    "nicName1": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), 1))]",
    "nicName2": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), 2))]",
    "nicName3": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), 3))]"
  },
  "resources": [
    {
      "name": "[parameters('newStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01-preview",
      "tags": {
        "displayName": "storageAccount"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "securityGroup1",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ui_rule",
            "properties": {
              "description": "Allow Web:443 Traffic",
              "priority": 101,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ui_rule2",
            "properties": { 
              "description": "Allow Web:80 Traffic",
              "priority": 102,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Allow"
            }
          },
          {
            "name": "ssh_rule",
            "properties": { 
              "description": "Deny SSH:22 Traffic",
              "priority": 103,
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "protocol": "TCP",
              "direction": "Inbound",
              "access": "Deny"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicName'), copyindex())]",
      "location": "[parameters('location')]",
      "tags": {
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', 'securityGroup1')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', 'securityGroup1')]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAddress": "10.0.2.6",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8080,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "name": "[parameters('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "tags": {
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
      ],
      "plan": {
        "name": "f5-bigip-virtual-edition-best-byol",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "f5-bigip-virtual-edition-best-byol",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',parameters('newStorageAccountName'),'/osDisk', copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicName'), copyindex()))]"
            }
          ]
        }
      }
    }
  ]
}
